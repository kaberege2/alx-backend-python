pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials') // Jenkins credentials ID
        GITHUB_CREDENTIALS = credentials('github-credentials')       // Jenkins credentials ID
        DOCKER_IMAGE = "kgnxxxxxxxxxxx/messaging-app:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/kaberege2/alx-backend-python.git',
                    credentialsId: "${GITHUB_CREDENTIALS}"
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'pip install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                pytest --maxfail=1 --disable-warnings -q --junitxml=reports/results.xml
                '''
            }
            post {
                always {
                    junit 'messaging_app/reports/results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} messaging_app"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials',
                                                  usernameVariable: 'DOCKER_USER',
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push ${DOCKER_IMAGE}
                    '''
                }
            }
        }
    }
}
